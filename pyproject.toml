[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "osi-one-agent"
version = "1.0.0"
description = "AI-Powered Desktop Assistant for OSI Digital Engineers"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "OSI Digital Team", email = "support@osi-digital.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.11"
dependencies = [
    "langchain>=0.1.0",
    "openai>=1.0.0",
    "requests>=2.31.0",
    "pydantic>=2.0.0",
    "cryptography>=41.0.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
    "selenium>=4.15.0",
    "webdriver-manager>=4.0.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "azure-devops>=7.0.0",
    "msgraph-sdk-python>=1.0.0",
    "pyyaml>=6.0.0",
    "structlog>=23.0.0",
    "aiohttp>=3.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "httpx>=0.24.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "ipython>=8.0.0",
    "jupyter>=1.0.0",
    "debugpy>=1.6.0",
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
]

[project.scripts]
osi-one-agent = "src.main:main"

[project.urls]
Homepage = "https://github.com/osi-digital/osi-one-agent"
Documentation = "https://github.com/osi-digital/osi-one-agent/wiki"
Repository = "https://github.com/osi-digital/osi-one-agent"
Issues = "https://github.com/osi-digital/osi-one-agent/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "selenium.*",
    "beautifulsoup4.*",
    "azure_devops.*",
    "msgraph.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 